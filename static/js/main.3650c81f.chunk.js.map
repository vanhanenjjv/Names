{"version":3,"sources":["suspense/withSuspense.tsx","suspense/wrapPromise.ts","pages/names/api.ts","pages/names/Count/Count.tsx","pages/names/Count/index.ts","pages/names/Search/Input.tsx","pages/names/Search/Result.tsx","pages/names/Search/Search.tsx","pages/names/Search/index.ts","pages/names/Table/Table.tsx","pages/names/Table/index.ts","pages/names/Names.tsx","pages/names/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withSuspense","options","Component","Fallback","props","Suspense","fallback","wrapPromise","promise","result","status","suspender","then","value","reason","read","hasNames","a","body","names","Array","isArray","length","name","amount","fetch","response","ok","Error","json","fetchNames","Count","loading","sum","React","useCallback","map","reduce","b","style","width","height","title","Input","onChange","disabled","event","target","placeholder","Result","description","Item","Search","useState","filter","setFilter","match","matches","nameLower","toLowerCase","filterLower","includes","push","size","direction","columns","dataIndex","key","sorter","localeCompare","Table","tableLayout","dataSource","undefined","rowKey","record","Names","gutter","xs","sm","App","Content","margin","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3650c81f.chunk.js","sourcesContent":["import React from 'react';\n\n\ntype Component<TProps> = React.FunctionComponent<TProps>;\ntype Fallback<TProps>  = React.FunctionComponent<TProps>;\n\ninterface SuspenseOptions<TProps> {\n  Component: Component<TProps>;\n  Fallback: Fallback<TProps>;\n}\n\nfunction withSuspense<TProps>(options: SuspenseOptions<TProps>): (props: TProps) => JSX.Element {\n  const { Component, Fallback } = options;\n\n  return props => (\n    <React.Suspense fallback={<Fallback {...props} />}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n}\n\n\nexport default withSuspense;\n","import Resource from './resource';\n\n\ntype Status = \n  | 'pending' \n  | 'error' \n  | 'success';\n\nfunction wrapPromise<T>(promise: Promise<T>): Resource<T> {\n  let status: Status = 'pending';\n  let result: T;\n\n  const suspender = promise.then(\n    value  => { status = 'success'; result = value;  },\n    reason => { status = 'error';   result = reason; }\n  );\n\n  return {\n    read() {\n      if (status === 'pending') throw suspender;\n      if (status === 'error')   throw result;\n      \n      return result;\n    }\n  };\n}\n\n\nexport default wrapPromise;\n","import { wrapPromise } from \"../../suspense\";\n\n\ninterface Name {\n  name: string;\n  amount: number;\n}\n\ninterface ResponseBodyWithNames {\n  names: Name[];\n}\n\nasync function fetchNames(): Promise<Name[]> {\n  const response = await fetch('https://raw.githubusercontent.com/solita/dev-academy-2021/main/names.json');\n\n  if (!response.ok) throw new Error('Failed to fetch names.');\n\n  const body = await response.json();\n\n  if (!hasNames(body)) throw new Error('Invalid response body.');\n\n  return body.names;\n\n  function hasNames(body: unknown): body is ResponseBodyWithNames {\n    if (typeof body !== 'object') return false;    \n    if (body === null)            return false;\n\n    if (!('names' in body))                return false;\n\n    const names = (body as { names: unknown }).names;\n\n    if (!Array.isArray(names))     return false;\n  \n    if (names.length === 0) return true;\n\n    if (typeof names[0] !== 'object') return false;\n    if (names[0] === null)            return false;\n\n    if (!('name' in names[0]))   return false;\n    if (!('amount' in names[0])) return false;\n\n    const { name, amount } = (names[0] as { name: unknown, amount: unknown });\n    \n    if (typeof name !== 'string')   return false;\n    if (typeof amount !== 'number') return false;\n\n    return true;\n  }\n}\n\nconst names = wrapPromise(fetchNames());\n\n\nexport default names;\nexport type { Name };\n","import React from 'react';\n\nimport { Card, Statistic } from 'antd';\n\nimport { withSuspense } from '../../../suspense';\nimport names from '../api';\n\n\ninterface CountProps {\n  loading?: boolean;\n}\n\nconst Count: React.FC<CountProps> = ({ loading }) => {\n  const sum = React.useCallback(() => names.read().map(name => name.amount).reduce((a, b) => a + b), []);\n\n  return (\n    <Card style={{ width: '100%', height: '100%' }}>\n      {loading\n        ? <Statistic title=\"Total amount of names\" loading />\n        : <Statistic title=\"Total amount of names\" value={sum()} />}\n    </Card>\n  );\n};\n\n\nexport default withSuspense({\n  Component: () => <Count />,\n  Fallback:  () => <Count loading />\n});\n","import Count from './Count';\n\n\nexport default Count;\n","import { Input as AntdInput } from 'antd';\n\n\ninterface InputProps {\n  onChange: (value: string) => void;\n  disabled: boolean;\n}\n\nconst Input: React.FC<InputProps> = ({ onChange, disabled }) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value);\n\n  return (\n    <AntdInput\n      disabled={disabled}\n      onChange={handleChange}\n      style={{ width: '100%' }}\n      placeholder=\"Search by name\" />\n  );\n};\n\n\nexport default Input;\n","import React from \"react\";\n\nimport { Empty, List, Typography } from \"antd\";\n\nimport { Name } from '../api';\n\n\ninterface ResultProps {\n  names: Name[];\n}\n\nconst Result: React.FC<ResultProps> = ({ names }) => {\n  if (names.length === 0) return <Empty description=\"No matches\" />;\n  if (names.length >= 5)  return <Typography>Too many matches</Typography>;\n  if (names.length === 1) return <Typography>Solita has {names[0].amount} employees named {names[0].name}</Typography>;\n\n  return (\n    <List style={{ width: '100%' }}>\n      {names.map(({ name }) => <List.Item key={name}>{name}</List.Item>)}\n    </List>\n  );\n};\n\n\nexport default Result;\n","import React from 'react';\n\nimport { Card, Space } from \"antd\";\n\nimport { withSuspense } from \"../../../suspense\";\nimport names, { Name } from '../api';\n\nimport Input from './Input';\nimport Result from './Result';\n\n\ninterface SearchProps {\n  loading?: boolean;\n}\n\nconst Search: React.FC<SearchProps> = ({ loading }) => {\n  const [filter, setFilter] = React.useState('');\n\n  const match = React.useCallback(\n    () => {\n      const matches: Name[] = [];\n\n      for (const name of names.read()) {\n        const nameLower   = name.name.toLowerCase();\n        const filterLower = filter.toLowerCase();\n\n        if (nameLower === filterLower)       return [name];\n        if (nameLower.includes(filterLower)) matches.push(name);\n      }\n\n      return matches;\n    }, \n    [filter]\n  );\n\n  return (\n    <Card style={{ width: '100%', height: '100%' }}>\n      <Space size=\"large\" direction=\"vertical\">\n        <Input onChange={setFilter} disabled={loading ?? true} />\n        {loading \n          ? <p>Loading...</p>\n          : <Result names={match()} />}\n      </Space>\n    </Card>\n  );\n};\n\n\nexport default withSuspense({\n  Component: () => <Search loading={false} />,\n  Fallback:  () => <Search loading />\n});\n\n","import Search from './Search';\n\n\nexport default Search;\n","import React from 'react';\n\nimport { Table as AntdTable } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\n\nimport { withSuspense } from '../../../suspense';\nimport names, { Name } from '../api';\n\n\nconst columns: ColumnsType<Name> = [\n  { title: 'Name',  dataIndex:  'name',   key: 'name',   sorter: (a, b) => a.name.localeCompare(b.name) },\n  { title: 'Amount', dataIndex: 'amount', key: 'amount', sorter: (a, b) => a.amount - b.amount          }\n];\n\ninterface TableProps {\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({ loading }) => {\n  return (\n    <AntdTable \n      tableLayout=\"fixed\"\n      style={{ height: '100%' }} \n      dataSource={loading ? undefined : names.read()} \n      columns={columns} \n      rowKey={loading ? undefined : record => record.name} />\n  );\n}\n\n\nexport default withSuspense({\n  Component: () => <Table />,\n  Fallback:  () => <Table loading />\n});\n","import Table from './Table';\n\n\nexport default Table;\n","import React from 'react';\n\nimport { Col, Row  } from 'antd';\n\nimport Count from './Count';\nimport Search from './Search';\nimport Table from './Table';\n\n\ninterface NamesInnerComponents {\n  Count:  typeof Count,\n  Search: typeof Search,\n  Table:  typeof Table\n}\n\nconst Names: React.FC & NamesInnerComponents = () => {\n  return (\n    <Row style={{ height: '100%' }} gutter={[16, 16]}>\n      <Col xs={24} sm={12} style={{}}><Count /></Col>\n      <Col xs={24} sm={12} style={{}}><Search /></Col>\n      <Col xs={24} sm={24}><Table /></Col>\n    </Row>\n  );\n};\n\nNames.Count  = Count;\nNames.Search = Search;\nNames.Table  = Table;\n\n\nexport default Names;\n","import Names from './Names';\n\n\nexport default Names;\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nimport { Names } from './pages';\n\n\nconst App: React.FC = () => {\n  return (\n    <Layout style={{ height: '100%' }}>\n      <Layout.Content style={{ margin: 16, justifyContent: 'center' }}>\n        <Names />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}